import { Component, OnInit } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from "@angular/forms";
import { Router } from "@angular/router";
import { RequestService } from '../sevices/request.service';
import { AuthService } from '../Auth/auth.service';
import { RequestDTO } from '../Models/request-dto';


@Component({
  selector: 'app-meet-up-request',
  templateUrl: './meet-up-request.component.html',
  styleUrls: ['./meet-up-request.component.css'],
})
export class MeetUpRequestComponent implements OnInit {
  form: FormGroup;
  userId: number = 0; // Initialize userId

  constructor(
      formBuilder: FormBuilder,
      private router: Router,
      private requestService: RequestService,
      private authService: AuthService
  ) {
    this.form = formBuilder.group({
      username: ['', Validators.required],
      date: ['', Validators.required],
      time: ['', Validators.required],
      timeuntil: ['', Validators.required],
      location: ['', Validators.required],
      description: ['', Validators.required]
    });
  }

  ngOnInit(): void {
    const token = this.authService.getToken();
    if (token) {
      const user = this.authService.getUserFromToken(token);
      if (user) {
        this.userId = user.id;
      } else {
        this.router.navigate(['/login']); // Redirect to login if user is null
      }
    } else {
      this.router.navigate(['/login']); // Redirect to login if not authenticated
    }
  }

  submitForm(): void {
    if (this.form.valid) {
      const request: RequestDTO = {
        id: 0, // Assuming id will be generated by the server
        sender: this.userId.toString(), // Converting userId to string
        receiver: this.form.value.username, // Assuming this is the receiver's username
        details: this.form.value.description,
        meetup_time: `${this.form.value.date}T${this.form.value.time}`, // Combine date and time
      };

      this.requestService.createRequest(request).subscribe(
          response => {
            console.log('Request created successfully', response);
            this.router.navigate(["/home"]);
          },
          error => {
            console.error('Error creating request', error);
          }
      );
    }
  }
}
